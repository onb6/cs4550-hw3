{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/oliviablier/Documents/classes-spring21/webdev/assignment3/hw3/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from 'react';\nimport { getRandomCode, getError, getResult } from \"./game\";\n\nfunction YouLost({\n  reset\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loser!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: reset,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = YouLost;\n\nfunction YouWon({\n  reset\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Congrats! You Won! :)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: reset,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = YouWon;\n\nfunction App() {\n  _s();\n\n  const [code, setCode] = useState(\"1234\");\n  const [guesses, setGuesses] = useState([]);\n  const [number, setNumber] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  function guess(ev) {\n    console.log(number);\n    console.log(isNaN(number));\n    setError(getError(g, guesses));\n\n    if (error === \"\") {\n      let newGuesses = guesses.concat(number);\n      setGuesses(newGuesses);\n      let r = getResult(number, code);\n\n      if (r === \"4A0B\") {\n        return /*#__PURE__*/_jsxDEV(YouWon, {\n          reset: newGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 24\n        }, this);\n      }\n    }\n  }\n\n  function newGame() {\n    setGuesses([]);\n    setCode(getRandomCode());\n    setNumber(\"\");\n  }\n\n  function updateNumber(ev) {\n    if (number.length < 4) {\n      let d = ev.target.value;\n      let num = d[d.length - 1];\n      setNumber(number + num);\n    }\n  }\n\n  if (guesses.length >= 8) {\n    return /*#__PURE__*/_jsxDEV(YouLost, {\n      reset: newGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"4Digit Game!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: newGame,\n        children: \"Start Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter 4 digits to make a guess:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: number,\n        onChange: updateNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: guess,\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"37kUXcuMZ3Fia5XaExI6v904xo0=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"YouLost\");\n$RefreshReg$(_c2, \"YouWon\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/oliviablier/Documents/classes-spring21/webdev/assignment3/hw3/src/App.js"],"names":["useState","getRandomCode","getError","getResult","YouLost","reset","YouWon","App","code","setCode","guesses","setGuesses","number","setNumber","error","setError","guess","ev","console","log","isNaN","g","newGuesses","concat","r","newGame","updateNumber","length","d","target","value","num"],"mappings":"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","sourcesContent":["import './App.css';\nimport {useState} from 'react';\nimport {getRandomCode, getError, getResult} from \"./game\";\n\nfunction YouLost({reset}) {\n    return (\n        <div className=\"App\">\n            <h1>Loser!</h1>\n            <p>\n                <button onClick={reset}>\n                    New Game\n                </button>\n            </p>\n        </div>\n    );\n}\n\nfunction YouWon({reset}) {\n    return (\n        <div className=\"App\">\n            <h1>Congrats! You Won! :)</h1>\n            <p>\n                <button onClick={reset}>\n                    New Game\n                </button>\n            </p>\n        </div>\n    );\n}\n\nfunction App() {\n\n    const [code, setCode] = useState(\"1234\");\n    const [guesses, setGuesses] = useState([]);\n    const [number, setNumber] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    function guess(ev) {\n        console.log(number);\n        console.log(isNaN(number));\n        setError(getError(g, guesses));\n        if (error === \"\") {\n            let newGuesses = guesses.concat(number);\n            setGuesses(newGuesses);\n            let r = getResult(number, code);\n            if (r === \"4A0B\") {\n                return <YouWon reset={newGame}/>\n            }\n        }\n    }\n\n\n    function newGame() {\n        setGuesses([]);\n        setCode(getRandomCode());\n        setNumber(\"\");\n    }\n\n    function updateNumber(ev) {\n        if (number.length < 4) {\n            let d = ev.target.value;\n            let num = d[d.length - 1];\n            setNumber(number + num);\n        }\n    }\n\n    if (guesses.length >= 8) {\n        return <YouLost reset={newGame}/>;\n    }\n\n    return (\n        <div className=\"App\">\n            <h1>4Digit Game!</h1>\n            <p>\n                <button onClick={newGame}>Start Over!</button>\n            </p>\n            <p>Enter 4 digits to make a guess:</p>\n            <p>\n                <input type=\"text\" value={number} onChange={updateNumber}/>\n                <button onClick={guess}>Enter</button>\n            </p>\n            <p>{error}</p><br/>\n\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}